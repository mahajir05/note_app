// Mocks generated by Mockito 5.3.2 from annotations
// in deptech_app/test/domain/note/usecases/note_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:deptech_app/domain/features/note/entities/note_entity.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

import 'note_usecase_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NoteRepositoryTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockNoteRepositoryTest extends _i1.Mock
    implements _i2.NoteRepositoryTest {
  MockNoteRepositoryTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.NoteEntity>?> getNotesByUserId(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotesByUserId,
          [userId],
        ),
        returnValue: _i3.Future<List<_i4.NoteEntity>?>.value(),
      ) as _i3.Future<List<_i4.NoteEntity>?>);
  @override
  _i3.Future<_i4.NoteEntity?> getNoteById(int? noteId) => (super.noSuchMethod(
        Invocation.method(
          #getNoteById,
          [noteId],
        ),
        returnValue: _i3.Future<_i4.NoteEntity?>.value(),
      ) as _i3.Future<_i4.NoteEntity?>);
  @override
  _i3.Future<int?> insertNote(_i4.NoteEntity? data) => (super.noSuchMethod(
        Invocation.method(
          #insertNote,
          [data],
        ),
        returnValue: _i3.Future<int?>.value(),
      ) as _i3.Future<int?>);
  @override
  _i3.Future<String?> updateNote(_i4.NoteEntity? data) => (super.noSuchMethod(
        Invocation.method(
          #updateNote,
          [data],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);
  @override
  _i3.Future<int?> deleteNote(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteNote,
          [id],
        ),
        returnValue: _i3.Future<int?>.value(),
      ) as _i3.Future<int?>);
}
